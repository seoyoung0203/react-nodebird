{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeongseoyeong/Desktop/react-nodebird/front/pages/_app.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport Head from \"next/dist/next-server/lib/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport rootSaga from \"../sagas\";\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })));\n};\n\nNodeBird.propTypes = {\n  // propsTypes -> props 를 잘 받고 있는지 검사\n  // 만약 props를 숫자로 받게 설정 -> 부모가 문자열을 준다면 콘솔에 에러\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n}; // store 를 생성해서 보냄\n\nexport default withRedux(function (initialState, options) {\n  // 여기에 store 커스터마이징 추가\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware]; // redux devtools 사용\n\n  var enhancer = compose(applyMiddleware.apply(void 0, middlewares), true && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n})(NodeBird);","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/pages/_app.js"],"names":["React","PropTypes","createStore","compose","applyMiddleware","Provider","createSagaMiddleware","reducer","withRedux","Head","AppLayout","rootSaga","NodeBird","Component","store","propTypes","elementType","object","initialState","options","sagaMiddleware","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH,CAZD;;AAcAF,QAAQ,CAACG,SAAT,GAAqB;AACjB;AACA;AACAF,EAAAA,SAAS,EAAEZ,SAAS,CAACe,WAHJ;AAIjBF,EAAAA,KAAK,EAAEb,SAAS,CAACgB;AAJA,CAArB,C,CAOA;;AACA,eAAeT,SAAS,CAAC,UAACU,YAAD,EAAeC,OAAf,EAA2B;AAChD;AACA,MAAMC,cAAc,GAAGd,oBAAoB,EAA3C;AACA,MAAMe,WAAW,GAAG,CAACD,cAAD,CAApB,CAHgD,CAKhD;;AACA,MAAME,QAAQ,GAAGnB,OAAO,CACpBC,eAAe,MAAf,SAAmBiB,WAAnB,CADoB,EAEpB,QAAiCE,MAAM,CAACC,4BAAP,KAAwC,WAAzE,GAAuFD,MAAM,CAACC,4BAAP,EAAvF,GAA+H,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAF3G,CAAxB;AAIA,MAAMX,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUW,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACM,GAAf,CAAmBf,QAAnB;AAEA,SAAOG,KAAP;AACH,CAduB,CAAT,CAcZF,QAdY,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport Head from \"next/dist/next-server/lib/head\";\nimport AppLayout from \"../components/AppLayout\";\nimport rootSaga from \"../sagas\";\n\nconst NodeBird = ({ Component, store }) => {\n    return (\n        <Provider store={store}>\n            <Head>\n                <title>NodeBird</title>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\" />\n            </Head>\n            <AppLayout>\n                <Component />\n            </AppLayout>\n        </Provider>\n    );\n};\n\nNodeBird.propTypes = {\n    // propsTypes -> props 를 잘 받고 있는지 검사\n    // 만약 props를 숫자로 받게 설정 -> 부모가 문자열을 준다면 콘솔에 에러\n    Component: PropTypes.elementType,\n    store: PropTypes.object,\n};\n\n// store 를 생성해서 보냄\nexport default withRedux((initialState, options) => {\n    // 여기에 store 커스터마이징 추가\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n\n    // redux devtools 사용\n    const enhancer = compose(\n        applyMiddleware(...middlewares),\n        typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n    );\n    const store = createStore(reducer, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n})(NodeBird);"]},"metadata":{},"sourceType":"module"}