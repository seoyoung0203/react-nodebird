{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst testPost = {\n  User: {\n    id: 1,\n    nickname: 'seoyoung'\n  },\n  content: '오늘 날씨 좋네ㅠ'\n};\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'seoyoung'\n    },\n    content: '안녕? 강아지야',\n    testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n  }],\n  // 화면에 보일 포스트들\n  imgPaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패\n  isAddingPost: false,\n  // 포스트 업로드 중\n  addPost: false\n}; // 업로드\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // 포스트 제거\n\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE'; // 포스트 수정\n\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const ADD_TEST = 'ADD_TEST'; // 로딩\n// like버튼 누르기\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; // like버튼 취소\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; // 이미지 업로딩\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; // 댓글 달기\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; // 댓글 불러오기\n\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE'; // 리트윗\n\nexport const addPostAction = {\n  type: ADD_POST_REQUEST\n};\nexport const addTestAction = {\n  type: ADD_TEST,\n  data: {\n    content: 'Hello, This is main post!',\n    UserId: 1,\n    User: {\n      nickname: 'seoyoung'\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          addPost: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPost: true,\n          mainPosts: [testPost, ...state.mainPosts]\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_TEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/reducers/post.js"],"names":["testPost","User","id","nickname","content","initialState","mainPosts","testImg","imgPaths","addPostErrorReason","isAddingPost","addPost","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","ADD_TEST","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","addPostAction","type","addTestAction","data","UserId","reducer","state","action","error"],"mappings":"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","sourcesContent":["const testPost = {\n    User: {\n        id: 1,\n        nickname: 'seoyoung',\n    },\n    content: '오늘 날씨 좋네ㅠ',\n};\n\n\nexport const initialState = {\n    mainPosts: [{\n        User: {\n            id: 1,\n            nickname: 'seoyoung',\n        },\n        content: '안녕? 강아지야',\n        testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n    }], // 화면에 보일 포스트들\n    imgPaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패\n    isAddingPost: false, // 포스트 업로드 중\n    addPost: false,\n};\n\n// 업로드\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\n// 포스트 제거\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\n// 포스트 수정\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\nexport const ADD_TEST = 'ADD_TEST';\n\n// 로딩\n\n// like버튼 누르기\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\n// like버튼 취소\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\n// 이미지 업로딩\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\n// 댓글 달기\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\n// 댓글 불러오기\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\n\n// 리트윗\n\n\nexport const addPostAction = {\n    type: ADD_POST_REQUEST,\n};\n\nexport const addTestAction = {\n    type: ADD_TEST,\n    data : {\n        content: 'Hello, This is main post!',\n        UserId: 1,\n        User : {\n            nickname: 'seoyoung',\n        },\n    },\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST: {\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                addPost: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: true,\n                mainPosts: [testPost, ...state.mainPosts],\n            }\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: false,\n                addPostErrorReason: action.error,\n            }\n        }\n        case ADD_TEST: {\n            return {\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n            };\n        }\n        default : {\n            return {\n                ...state,\n            };\n        }\n    }\n};\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}