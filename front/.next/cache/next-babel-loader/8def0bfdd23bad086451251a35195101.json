{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst testPost = {\n  imgPaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'seoyoung'\n    },\n    content: '첫번째 게시글',\n    testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n  }]\n};\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'seoyoung'\n    },\n    content: '첫번째 게시글',\n    testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n  }],\n  imgPath: []\n};\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_TEST = 'ADD_TEST';\nexport const addPostAction = {\n  type: ADD_POST\n};\nexport const addTestAction = {\n  type: ADD_TEST,\n  data: {\n    content: 'Hello, This is main post!',\n    UserId: 1,\n    User: {\n      nickname: 'seoyoung'\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_TEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/reducers/post.js"],"names":["testPost","imgPaths","mainPosts","User","id","nickname","content","testImg","initialState","imgPath","ADD_POST","ADD_TEST","addPostAction","type","addTestAction","data","UserId","reducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,EADG;AAEbC,EAAAA,SAAS,EAAG,CAAC;AACTC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADG;AAKTC,IAAAA,OAAO,EAAE,SALA;AAMTC,IAAAA,OAAO,EAAE;AANA,GAAD;AAFC,CAAjB;AAYA,OAAO,MAAMC,YAAY,GAAG;AACxBN,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADE;AAKRC,IAAAA,OAAO,EAAE,SALD;AAMRC,IAAAA,OAAO,EAAE;AAND,GAAD,CADa;AASxBE,EAAAA,OAAO,EAAE;AATe,CAArB;AAYP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,IAAI,EAAEH;AADmB,CAAtB;AAIP,OAAO,MAAMI,aAAa,GAAG;AACzBD,EAAAA,IAAI,EAAEF,QADmB;AAEzBI,EAAAA,IAAI,EAAG;AACHT,IAAAA,OAAO,EAAE,2BADN;AAEHU,IAAAA,MAAM,EAAE,CAFL;AAGHb,IAAAA,IAAI,EAAG;AACHE,MAAAA,QAAQ,EAAE;AADP;AAHJ;AAFkB,CAAtB;;AAWP,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKH,QAAL;AAAe;AACX,iCACOQ,KADP;AAGH;;AACD,SAAKP,QAAL;AAAe;AACX,iCACOO,KADP;AAEIhB,UAAAA,SAAS,EAAE,CAACiB,MAAM,CAACJ,IAAR,EAAc,GAAGG,KAAK,CAAChB,SAAvB;AAFf;AAIH;;AACD;AAAU;AACN,iCACOgB,KADP;AAGH;AAhBL;AAkBH,CAnBD;;AAsBA,eAAeD,OAAf","sourcesContent":["const testPost = {\n    imgPaths: [],\n    mainPosts : [{\n        User: {\n            id: 1,\n            nickname: 'seoyoung',\n        },\n        content: '첫번째 게시글',\n        testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n    }],\n};\n\nexport const initialState = {\n    mainPosts: [{\n        User: {\n            id: 1,\n            nickname: 'seoyoung',\n        },\n        content: '첫번째 게시글',\n        testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n    }],\n    imgPath: [],\n};\n\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_TEST = 'ADD_TEST';\n\nexport const addPostAction = {\n    type: ADD_POST,\n};\n\nexport const addTestAction = {\n    type: ADD_TEST,\n    data : {\n        content: 'Hello, This is main post!',\n        UserId: 1,\n        User : {\n            nickname: 'seoyoung',\n        },\n    },\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n            };\n        }\n        case ADD_TEST: {\n            return {\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n            };\n        }\n        default : {\n            return {\n                ...state,\n            };\n        }\n    }\n};\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}