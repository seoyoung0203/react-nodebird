{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST } from \"../reducers/user\";\n\nfunction loginAPI() {\n  axios.get('/login');\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('Login saga'); //yield call(loginAPI);\n\n          delay(2000);\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/sagas/user.js"],"names":["login","watchLogin","userSaga","all","call","put","takeLatest","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","loginAPI","get","console","log","type","error"],"mappings":";;oDAQUA,K;qDAgBAC,U;qDAIeC,Q;;AA5BzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,QAA6D,kBAA7D;;AAEA,SAASC,QAAT,GAAoB;AAChBJ,EAAAA,KAAK,CAACK,GAAN,CAAU,QAAV;AACH;;AAED,SAAUd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQe,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFR,CAGQ;;AACAR,UAAAA,KAAK,CAAC,IAAD,CAAL;AAJR;AAKQ,iBAAMH,GAAG,CAAC;AACNY,YAAAA,IAAI,EAAEP;AADA,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQK,UAAAA,OAAO,CAACG,KAAR;AATR;AAUQ,iBAAMb,GAAG,CAAC;AACNY,YAAAA,IAAI,EAAEN;AADA,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUV,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACM,cAAD,EAAiBZ,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNI,IAAI,CAACN,UAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST} from \"../reducers/user\";\n\nfunction loginAPI() {\n    axios.get('/login');\n}\n\nfunction* login() {\n    try {\n        console.log('Login saga');\n        //yield call(loginAPI);\n        delay(2000);\n        yield put({\n            type: LOG_IN_SUCCESS,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}