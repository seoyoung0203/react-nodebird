{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Store\nvar testUser = {\n  nickname: 'seoyoung',\n  Post: [],\n  Following: [],\n  Follower: [],\n  isLoggedIn: true\n};\nexport var initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도 중\n  isLoggingIn: false,\n  // 로그인 시도 중\n  logInErrorReason: '',\n  // 로그인 에러 사유\n  signedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도 중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // Action 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 로그아웃\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 회원가입\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; // 사용자 정보 불러오기\n\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'; // 팔로우\n\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE'; // 언팔로우\n\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'; // 팔로우, 팔로잉 목록 불러오기\n\nexport var LOAD_LIST_REQUEST = 'LOAD_LIST_REQUEST';\nexport var LOAD_LIST_SUCCESS = 'LOAD_LIST_SUCCESS';\nexport var LOAD_LIST_FAILURE = 'LOAD_LIST_FAILURE'; // 내 팔로워 삭제\n\nexport var DELETE_FOLLOWER_REQUEST = 'DELETE_FOLLOWER_REQUEST';\nexport var DELETE_FOLLOWER_SUCCESS = 'DELETE_FOLLOWER_SUCCESS';\nexport var DELETE_FOLLOWER_FAILURE = 'DELETE_FOLLOWER_FAILURE';\nexport var loginAction = {\n  type: LOG_IN_REQUEST\n};\nexport var logoutAction = {\n  type: LOG_OUT_REQUEST\n};\n/*\nexport const signUpAction = (data) => {\n    return {\n        type: SIGN_UP,\n        data\n    };\n};\n*/\n// 바로 리턴하는 함수의 경우 이런식으로 사용 가능.\n\nexport var SignUp = function SignUp(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nvar reducers = function reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          isLoggedIn: true,\n          me: null,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: testUser,\n          isLoggingIn: false,\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/reducers/user.js"],"names":["testUser","nickname","Post","Following","Follower","isLoggedIn","initialState","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_LIST_REQUEST","LOAD_LIST_SUCCESS","LOAD_LIST_FAILURE","DELETE_FOLLOWER_REQUEST","DELETE_FOLLOWER_SUCCESS","DELETE_FOLLOWER_FAILURE","loginAction","type","logoutAction","SignUp","data","reducers","state","action","error","user","signUpData"],"mappings":"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","sourcesContent":["// Store\nconst testUser = {\n    nickname: 'seoyoung',\n    Post: [],\n    Following: [],\n    Follower: [],\n    isLoggedIn: true,\n};\n\nexport const initialState = {\n    isLoggedIn : false, // 로그인 여부\n    isLoggingOut: false, // 로그아웃 시도 중\n    isLoggingIn: false, // 로그인 시도 중\n    logInErrorReason: '', // 로그인 에러 사유\n    signedUp: false, // 회원가입 성공\n    isSigningUp: false, // 회원가입 시도 중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null, // 내 정보\n    followingList: [], // 팔로잉 리스트\n    followerList: [], // 팔로워 리스트\n    userInfo: null, // 남의 정보\n};\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // Action 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\n// 로그아웃\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\n// 회원가입\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\n// 사용자 정보 불러오기\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\n// 팔로우\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\n// 언팔로우\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\n// 팔로우, 팔로잉 목록 불러오기\nexport const LOAD_LIST_REQUEST = 'LOAD_LIST_REQUEST';\nexport const LOAD_LIST_SUCCESS = 'LOAD_LIST_SUCCESS';\nexport const LOAD_LIST_FAILURE = 'LOAD_LIST_FAILURE';\n\n// 내 팔로워 삭제\nexport const DELETE_FOLLOWER_REQUEST = 'DELETE_FOLLOWER_REQUEST';\nexport const DELETE_FOLLOWER_SUCCESS = 'DELETE_FOLLOWER_SUCCESS';\nexport const DELETE_FOLLOWER_FAILURE = 'DELETE_FOLLOWER_FAILURE';\n\n\nexport const loginAction = {\n    type: LOG_IN_REQUEST,\n\n};\n\nexport const logoutAction = {\n    type: LOG_OUT_REQUEST,\n};\n\n/*\nexport const signUpAction = (data) => {\n    return {\n        type: SIGN_UP,\n        data\n    };\n};\n*/\n\n// 바로 리턴하는 함수의 경우 이런식으로 사용 가능.\nexport const SignUp = data => ({\n   type: SIGN_UP_REQUEST,\n   data,\n});\n\n\nconst reducers = (state = initialState, action) => {\n    switch (action.type) {\n        case LOG_IN_REQUEST : {\n            return {\n                ...state,\n                isLoggingIn: true,\n                isLoggedIn: true,\n                me: null,\n                logInErrorReason: '',\n            };\n        }\n        case LOG_IN_SUCCESS : {\n            return {\n                ...state,\n                me: testUser,\n                isLoggingIn: false,\n                isLoggedIn: true,\n            }\n        }\n        case LOG_IN_FAILURE : {\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n                logInErrorReason: action.error,\n            }\n        }\n        case LOG_OUT_REQUEST : {\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        }\n        case SIGN_UP_REQUEST : {\n            return {\n                ...state,\n                signUpData: action.data,\n            };\n        }\n        default : {\n            return {\n              ...state,\n            };\n        }\n    }\n};\n\nexport default reducers;\n\n\n"]},"metadata":{},"sourceType":"module"}