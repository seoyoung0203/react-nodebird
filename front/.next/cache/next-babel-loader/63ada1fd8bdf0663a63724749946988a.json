{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginAPI),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST } from \"../reducers/user\";\n\nfunction loginAPI() {\n  return _regeneratorRuntime.wrap(function loginAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction logoutAPI() {}\n\nfunction signupAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction signup() {\n  return _regeneratorRuntime.wrap(function signup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(signupAPI);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchSignup)]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/sagas/user.js"],"names":["loginAPI","login","logout","signup","watchLogin","watchLogout","watchSignup","userSaga","all","call","put","takeLatest","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","logoutAPI","signupAPI","type","console","error"],"mappings":";;oDAaUA,Q;qDAYAC,K;qDAcAC,M;qDAaAC,M;qDAaAC,U;qDAIAC,W;qDAIAC,W;qDAIeC,Q;;AA7EzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,eAPJ,EAQIC,eARJ,EAQqBC,eARrB,QASO,kBATP;;AAWA,SAAUvB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASwB,SAAT,GAAqB,CAEpB;;AAED,SAASC,SAAT,GAAqB,CAEpB;;AAED,SAAUxB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMQ,IAAI,CAACT,QAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMU,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAAEX;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQY,UAAAA,OAAO,CAACC,KAAR;AAPR;AAQQ,iBAAMlB,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAAEV;AADA,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUd,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMO,IAAI,CAACe,SAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMd,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAAEP;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMT,GAAG,CAAC;AACPgB,YAAAA,IAAI,EAAEN;AADC,WAAD,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUjB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMM,IAAI,CAACgB,SAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMf,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAAEL;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMX,GAAG,CAAC;AACPgB,YAAAA,IAAI,EAAEJ;AADC,WAAD,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUlB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACM,cAAD,EAAiBhB,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUI,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACO,eAAD,EAAkBhB,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUI,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACY,eAAD,EAAkBpB,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNI,IAAI,CAACR,UAAD,CADE,EAENQ,IAAI,CAACP,WAAD,CAFE,EAGNO,IAAI,CAACN,WAAD,CAHE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    LOG_IN_SUCCESS,\n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_OUT_REQUEST,\n    LOG_OUT_SUCCESS,\n    LOG_OUT_FAILURE,\n    SIGN_UP_SUCCESS,\n    SIGN_UP_FAILURE, SIGN_UP_REQUEST\n} from \"../reducers/user\";\n\nfunction* loginAPI() {\n    //axios.get('/login');\n}\n\nfunction logoutAPI() {\n\n}\n\nfunction signupAPI() {\n\n}\n\nfunction* login() {\n    try {\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* logout() {\n    try{\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* signup() {\n    try{\n        yield call(signupAPI);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: SIGN_UP_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n    yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n    yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}