{"ast":null,"code":"import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST } from \"../reducers/user\";\n\nfunction* loginAPI() {//axios.get('/login');\n}\n\nfunction logoutAPI() {}\n\nfunction signupAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction* signup() {\n  try {\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup)]);\n}","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/sagas/user.js"],"names":["all","call","put","takeLatest","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","loginAPI","logoutAPI","signupAPI","login","type","e","console","error","logout","signup","watchLogin","watchLogout","watchSignup","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,eAPJ,EAQIC,eARJ,EAQqBC,eARrB,QASO,kBATP;;AAWA,UAAUC,QAAV,GAAqB,CACjB;AACH;;AAED,SAASC,SAAT,GAAqB,CAEpB;;AAED,SAASC,SAAT,GAAqB,CAEpB;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA,UAAMlB,IAAI,CAACe,QAAD,CAAV;AACA,UAAMd,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEb;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMc,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEZ;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUgB,MAAV,GAAmB;AACf,MAAG;AACC,UAAMvB,IAAI,CAACgB,SAAD,CAAV;AACA,UAAMf,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAET;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMU,CAAN,EAAS;AACP,UAAMnB,GAAG,CAAC;AACPkB,MAAAA,IAAI,EAAER;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,MAAV,GAAmB;AACf,MAAG;AACC,UAAMvB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAJD,CAIE,OAAMQ,CAAN,EAAS;AACP,UAAMnB,GAAG,CAAC;AACPkB,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUY,UAAV,GAAuB;AACnB,QAAMvB,UAAU,CAACM,cAAD,EAAiBU,KAAjB,CAAhB;AACH;;AAED,UAAUQ,WAAV,GAAwB;AACpB,QAAMxB,UAAU,CAACO,eAAD,EAAkBc,MAAlB,CAAhB;AACH;;AAED,UAAUI,WAAV,GAAwB;AACpB,QAAMzB,UAAU,CAACY,eAAD,EAAkBU,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAM7B,GAAG,CAAC,CACNI,IAAI,CAACsB,UAAD,CADE,EAENtB,IAAI,CAACuB,WAAD,CAFE,EAGNvB,IAAI,CAACwB,WAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    LOG_IN_SUCCESS,\n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_OUT_REQUEST,\n    LOG_OUT_SUCCESS,\n    LOG_OUT_FAILURE,\n    SIGN_UP_SUCCESS,\n    SIGN_UP_FAILURE, SIGN_UP_REQUEST\n} from \"../reducers/user\";\n\nfunction* loginAPI() {\n    //axios.get('/login');\n}\n\nfunction logoutAPI() {\n\n}\n\nfunction signupAPI() {\n\n}\n\nfunction* login() {\n    try {\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* logout() {\n    try{\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* signup() {\n    try{\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: SIGN_UP_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n    yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n    yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}