{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeongseoyeong/Desktop/react-nodebird/front/components/MainPost.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Avatar, Input, List } from 'antd';\nimport { HeartOutlined, MessageOutlined, MenuOutlined, UserAddOutlined, UserOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar MainPost = function MainPost(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      commentList = _useSelector.commentList;\n\n  var _useState = useState(false),\n      commentFormOpen = _useState[0],\n      setCommentFormOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var onClickComment = useCallback(function () {\n    if (commentFormOpen) {\n      setCommentFormOpen(false);\n    } else {\n      setCommentFormOpen(true);\n    }\n  }, [commentFormOpen]);\n  var onChangeComment = useCallback(function (e) {\n    e.preventDefault();\n    setCommentText(e.target.value);\n  }, [commentText]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: commentText\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    key: post,\n    actions: [__jsx(\"div\", {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, __jsx(HeartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }\n    })), __jsx(\"div\", {\n      key: \"comment\",\n      onClick: onClickComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, __jsx(MessageOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 65\n      }\n    })), __jsx(\"div\", {\n      key: \"else\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(MenuOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }))],\n    cover: __jsx(\"img\", {\n      alt: \"example\",\n      src: post.testImg,\n      style: {\n        maxHeight: 500\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(UserAddOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 52\n    }\n  })), __jsx(Card.Meta, {\n    title: post.User.nickname,\n    avatar: __jsx(Avatar, {\n      size: 30,\n      icon: __jsx(UserOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 53\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }),\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), __jsx(List, {\n    itemLayout: \"horizontal\",\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 39\n          }\n        }),\n        title: __jsx(\"a\", {\n          href: \"https://ant.design\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 38\n          }\n        }, item.title),\n        description: \"\\uADC0\\uC5FD\\uB2F9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), commentFormOpen && __jsx(React.Fragment, null, __jsx(Input, {\n    placeholder: \"input text\",\n    onSearch: function onSearch(value) {\n      return console.log(value);\n    },\n    enterButton: \"send\",\n    value: commentText,\n    onChange: onChangeComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    shape: \"circle\",\n    icon: __jsx(SearchOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 67\n      }\n    }),\n    onClick: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }));\n};\n\nMainPost.PropTypes = {\n  post: PropTypes.node\n};\nexport default MainPost;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/components/MainPost.js"],"names":["React","useState","useCallback","useSelector","useDispatch","PropTypes","Button","Card","Avatar","Input","List","HeartOutlined","MessageOutlined","MenuOutlined","UserAddOutlined","UserOutlined","SearchOutlined","ADD_COMMENT_REQUEST","MainPost","post","dispatch","state","commentList","commentFormOpen","setCommentFormOpen","commentText","setCommentText","onClickComment","onChangeComment","e","preventDefault","target","value","onSubmit","type","data","testImg","maxHeight","User","nickname","content","item","title","console","log","node"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Avatar, Input, List } from 'antd';\nimport { HeartOutlined , MessageOutlined, MenuOutlined, UserAddOutlined, UserOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport  { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst MainPost = ({ post }) => {\n    const dispatch = useDispatch();\n    const { commentList } = useSelector(state => state.post);\n\n    const [commentFormOpen, setCommentFormOpen] = useState(false);\n    const [commentText, setCommentText] = useState('');\n\n    const onClickComment = useCallback(() => {\n        if(commentFormOpen) {\n            setCommentFormOpen(false);\n        } else {\n            setCommentFormOpen(true);\n        }\n    }, [commentFormOpen]);\n\n    const onChangeComment = useCallback((e) => {\n        e.preventDefault();\n        setCommentText(e.target.value);\n    }, [commentText]);\n\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: commentText\n        });\n    }, []);\n\n      return (\n          <>\n              <Card\n                  key={post}\n                  actions={[\n                    <div key=\"heart\"><HeartOutlined /></div>,\n                    <div key=\"comment\" onClick={onClickComment}><MessageOutlined /></div>,\n                    <div key=\"else\"><MenuOutlined /></div>,\n                  ]}\n                  cover={<img alt=\"example\" src={post.testImg}\n                              style={{ maxHeight: 500}}\n                  />}\n              >\n                <Button style={{ float: 'right' }}><UserAddOutlined /></Button>\n                <Card.Meta\n                    title={post.User.nickname}\n                    avatar={<Avatar size={30} icon={<UserOutlined/>}/>}\n                    description={post.content}\n                />\n              </Card>\n              <List\n                  itemLayout=\"horizontal\"\n                  renderItem={item => (\n                      <List.Item>\n                          <List.Item.Meta\n                              avatar={<Avatar  />}\n                              title={<a href=\"https://ant.design\">{item.title}</a>}\n                              description=\"귀엽당\"\n                          />\n                      </List.Item>\n                  )}\n              />\n              {commentFormOpen && (\n                  <>\n                      <Input placeholder=\"input text\"\n                             onSearch={value => console.log(value)}\n                             enterButton=\"send\"\n                             value={commentText}\n                             onChange={onChangeComment}\n                      />\n                      <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} onClick={onSubmit}/>\n                  </>\n              )}\n              <br />\n          </>\n      );\n};\n\nMainPost.PropTypes = {\n    post: PropTypes.node,\n};\n\nexport default MainPost;"]},"metadata":{},"sourceType":"module"}