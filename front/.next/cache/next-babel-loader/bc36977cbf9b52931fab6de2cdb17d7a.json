{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar testPost = {\n  User: {\n    id: 1,\n    nickname: 'seoyoung'\n  },\n  content: '오늘 날씨 좋네ㅠ'\n};\nvar testComment = {\n  commentText: {\n    title: 'dlwlrma',\n    content: '절미같아'\n  }\n};\nexport var initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'seoyoung'\n    },\n    content: '안녕? 강아지야',\n    testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n  }],\n  // 화면에 보일 포스트들\n  imgPaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패\n  isAddingPost: false,\n  // 포스트 업로드 중\n  addPost: false,\n  isAddingComment: false,\n  commentText: '',\n  commentList: [{\n    title: 'vvoojin',\n    content: '귀엽당!!'\n  }]\n}; // 업로드\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // 포스트 제거\n\nexport var DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport var DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport var DELETE_POST_FAILURE = 'DELETE_POST_FAILURE'; // 포스트 수정\n\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport var ADD_TEST = 'ADD_TEST'; // 로딩\n// like버튼 누르기\n\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; // like버튼 취소\n\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; // 이미지 업로딩\n\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; // 댓글 달기\n\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; // 댓글 불러오기\n\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE'; // 리트윗\n\nexport var addPostAction = {\n  type: ADD_POST_REQUEST\n};\nexport var addTestAction = {\n  type: ADD_TEST,\n  data: {\n    content: 'Hello, This is main post!',\n    UserId: 1,\n    User: {\n      nickname: 'seoyoung'\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          addPost: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPost: true,\n          mainPosts: [testPost].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          commentText: ''\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          commentText: [].concat(_toConsumableArray(state), [testComment])\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false\n        });\n      }\n\n    case ADD_TEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/reducers/post.js"],"names":["testPost","User","id","nickname","content","testComment","commentText","title","initialState","mainPosts","testImg","imgPaths","addPostErrorReason","isAddingPost","addPost","isAddingComment","commentList","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","ADD_TEST","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","addPostAction","type","addTestAction","data","UserId","reducer","state","action","error"],"mappings":"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","sourcesContent":["const testPost = {\n    User: {\n        id: 1,\n        nickname: 'seoyoung',\n    },\n    content: '오늘 날씨 좋네ㅠ',\n};\n\nconst testComment = {\n    commentText: {\n        title: 'dlwlrma',\n        content: '절미같아'\n    }\n};\n\nexport const initialState = {\n    mainPosts: [{\n        User: {\n            id: 1,\n            nickname: 'seoyoung',\n        },\n        content: '안녕? 강아지야',\n        testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n    }], // 화면에 보일 포스트들\n    imgPaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패\n    isAddingPost: false, // 포스트 업로드 중\n    addPost: false,\n    isAddingComment: false,\n    commentText: '',\n    commentList: [\n        {\n            title: 'vvoojin',\n            content: '귀엽당!!'\n        },\n    ],\n};\n\n// 업로드\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\n// 포스트 제거\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\n// 포스트 수정\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\nexport const ADD_TEST = 'ADD_TEST';\n\n// 로딩\n\n// like버튼 누르기\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\n// like버튼 취소\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\n// 이미지 업로딩\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\n// 댓글 달기\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\n// 댓글 불러오기\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\n\n// 리트윗\n\n\nexport const addPostAction = {\n    type: ADD_POST_REQUEST,\n};\n\nexport const addTestAction = {\n    type: ADD_TEST,\n    data : {\n        content: 'Hello, This is main post!',\n        UserId: 1,\n        User : {\n            nickname: 'seoyoung',\n        },\n    },\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST: {\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                addPost: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: true,\n                mainPosts: [testPost, ...state.mainPosts],\n            }\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: false,\n                addPostErrorReason: action.error,\n            }\n        }\n        case ADD_COMMENT_REQUEST: {\n            return {\n                ...state,\n                isAddingComment: true,\n                commentText: ''\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            return {\n                ...state,\n                isAddingComment: false,\n                commentText: [...state, testComment],\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            return {\n                ...state,\n                isAddingComment: false,\n            };\n        }\n        case ADD_TEST: {\n            return {\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n            };\n        }\n        default : {\n            return {\n                ...state,\n            };\n        }\n    }\n};\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}