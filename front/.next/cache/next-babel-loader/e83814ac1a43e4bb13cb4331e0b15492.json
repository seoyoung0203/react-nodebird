{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeongseoyeong/Desktop/react-nodebird/front/components/MainPost.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Avatar } from 'antd';\nimport { HeartOutlined, MessageOutlined, MenuOutlined, UserAddOutlined, UserOutlined } from \"@ant-design/icons\";\n\nvar MainPost = function MainPost(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpen = _useState[0],\n      setCommentFormOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var onClickComment = useCallback(function () {\n    if (commentFormOpen) {\n      setCommentFormOpen(false);\n    } else {\n      setCommentFormOpen(true);\n    }\n\n    console.log(commentFormOpen);\n  }, [commentFormOpen]);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    key: post,\n    actions: [__jsx(\"div\", {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, __jsx(HeartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }\n    })), __jsx(\"div\", {\n      key: \"comment\",\n      onClick: onClickComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, __jsx(MessageOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 65\n      }\n    })), __jsx(\"div\", {\n      key: \"else\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(MenuOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    }))],\n    cover: __jsx(\"img\", {\n      alt: \"example\",\n      src: post.testImg,\n      style: {\n        maxHeight: 500\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(UserAddOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 52\n    }\n  })), __jsx(Card.Meta, {\n    title: post.User.nickname,\n    avatar: __jsx(Avatar, {\n      size: 30,\n      icon: __jsx(UserOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 53\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }),\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), commentFormOpen && __jsx(React.Fragment, null, __jsx(Search, {\n    placeholder: \"input search text\",\n    enterButton: \"Search\",\n    size: \"large\",\n    onSearch: function onSearch(value) {\n      return console.log(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }));\n};\n\nMainPost.PropTypes = {\n  post: PropTypes.node\n};\nexport default MainPost;","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/components/MainPost.js"],"names":["React","useState","useCallback","useSelector","useDispatch","PropTypes","Button","Card","Avatar","HeartOutlined","MessageOutlined","MenuOutlined","UserAddOutlined","UserOutlined","MainPost","post","commentFormOpen","setCommentFormOpen","commentText","setCommentText","onClickComment","console","log","testImg","maxHeight","User","nickname","content","value","node"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Avatar } from 'antd';\nimport { HeartOutlined , MessageOutlined, MenuOutlined, UserAddOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst MainPost = ({ post }) => {\n    const [commentFormOpen, setCommentFormOpen] = useState(false);\n    const [commentText, setCommentText] = useState('');\n\n    const onClickComment = useCallback(() => {\n        if(commentFormOpen) {\n            setCommentFormOpen(false);\n        } else {\n            setCommentFormOpen(true);\n        }\n\n        console.log(commentFormOpen);\n    }, [commentFormOpen]);\n\n      return (\n          <>\n              <Card\n                  key={post}\n                  actions={[\n                    <div key=\"heart\"><HeartOutlined /></div>,\n                    <div key=\"comment\" onClick={onClickComment}><MessageOutlined /></div>,\n                    <div key=\"else\"><MenuOutlined /></div>,\n                  ]}\n                  cover={<img alt=\"example\" src={post.testImg}\n                              style={{ maxHeight: 500}}\n                  />}\n              >\n                <Button style={{ float: 'right' }}><UserAddOutlined /></Button>\n                <Card.Meta\n                    title={post.User.nickname}\n                    avatar={<Avatar size={30} icon={<UserOutlined/>}/>}\n                    description={post.content}\n                />\n              </Card>\n              {commentFormOpen && (\n                  <>\n                      <Search\n                          placeholder=\"input search text\"\n                          enterButton=\"Search\"\n                          size=\"large\"\n                          onSearch={value => console.log(value)}\n                      />\n                  </>\n              )}\n              <br />\n          </>\n      );\n};\n\nMainPost.PropTypes = {\n    post: PropTypes.node,\n};\n\nexport default MainPost;"]},"metadata":{},"sourceType":"module"}