{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI() {\n  axios.get('/login');\n}\n\nfunction logoutAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(delay(2000));\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 3:\n          _context2.next = 9;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 9;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 5]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchLogout)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/sagas/user.js"],"names":["login","logout","watchLogin","watchLogout","userSaga","all","call","put","takeLatest","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginAPI","get","logoutAPI","type","console","error"],"mappings":";;oDAYUA,K;qDAeAC,M;qDAYAC,U;qDAIAC,W;qDAIeC,Q;;AA/CzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAA0FC,eAA1F,QAAiH,kBAAjH;;AAEA,SAASC,QAAT,GAAoB;AAChBP,EAAAA,KAAK,CAACQ,GAAN,CAAU,QAAV;AACH;;AAED,SAASC,SAAT,GAAqB,CAEpB;;AAED,SAAUpB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMM,IAAI,CAACI,KAAK,CAAC,IAAD,CAAN,CAAV;;AAHR;AAAA;AAIQ,iBAAMH,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAET;AADA,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQU,UAAAA,OAAO,CAACC,KAAR;AARR;AASQ,iBAAMhB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER;AADA,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUZ,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMM,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAEL;AADA,WAAD,CAAT;;AAFR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMT,GAAG,CAAC;AACPc,YAAAA,IAAI,EAAEJ;AADC,WAAD,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUf,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACM,cAAD,EAAiBd,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACO,eAAD,EAAkBd,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNI,IAAI,CAACP,UAAD,CADE,EAENO,IAAI,CAACN,WAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI() {\n    axios.get('/login');\n}\n\nfunction logoutAPI() {\n\n}\n\nfunction* login() {\n    try {\n        //yield call(loginAPI);\n        yield call(delay(2000));\n        yield put({\n            type: LOG_IN_SUCCESS,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* logout() {\n    try{\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n    yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}