{"ast":null,"code":"import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI() {\n  //axios.get('/login');\n  console.log('loginsaga');\n  delay(2000);\n}\n\nfunction logoutAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/jeongseoyeong/Desktop/react-nodebird/front/sagas/user.js"],"names":["all","call","put","takeLatest","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginAPI","console","log","logoutAPI","login","type","e","error","logout","watchLogin","watchLogout","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAA0FC,eAA1F,QAAiH,kBAAjH;;AAEA,SAASC,QAAT,GAAoB;AAChB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAV,EAAAA,KAAK,CAAC,IAAD,CAAL;AACH;;AAED,SAASW,SAAT,GAAqB,CAEpB;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA,UAAMhB,IAAI,CAACY,QAAD,CAAV;AACA,UAAMX,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMY,CAAN,EAAS;AACPL,IAAAA,OAAO,CAACM,KAAR,CAAcD,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,MAAV,GAAmB;AACf,MAAG;AACC,UAAMnB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAJD,CAIE,OAAMQ,CAAN,EAAS;AACP,UAAMjB,GAAG,CAAC;AACPgB,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUU,UAAV,GAAuB;AACnB,QAAMnB,UAAU,CAACM,cAAD,EAAiBQ,KAAjB,CAAhB;AACH;;AAED,UAAUM,WAAV,GAAwB;AACpB,QAAMpB,UAAU,CAACO,eAAD,EAAkBW,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMxB,GAAG,CAAC,CACNI,IAAI,CAACkB,UAAD,CADE,EAENlB,IAAI,CAACmB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, call, put, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI() {\n    //axios.get('/login');\n    console.log('loginsaga');\n    delay(2000);\n}\n\nfunction logoutAPI() {\n\n}\n\nfunction* login() {\n    try {\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* logout() {\n    try{\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(e) {\n        yield put({\n           type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n    yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}