{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/MainPost.js","webpack:///./components/PostForm.js","webpack:///./pages/index.js","webpack:///./reducers/post.js","webpack:///external \"@ant-design/icons\"","webpack:///external \"antd\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Avatar, Input, List } from 'antd';\nimport { HeartOutlined , MessageOutlined, MenuOutlined, UserAddOutlined, UserOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport  { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst MainPost = ({ post }) => {\n    const dispatch = useDispatch();\n    const { commentList } = useSelector(state => state.post);\n\n    const [commentFormOpen, setCommentFormOpen] = useState(false);\n    const [commentText, setCommentText] = useState('');\n\n    const onClickComment = useCallback(() => {\n        if(commentFormOpen) {\n            setCommentFormOpen(false);\n        } else {\n            setCommentFormOpen(true);\n        }\n    }, [commentFormOpen]);\n\n    const onChangeComment = useCallback((e) => {\n        e.preventDefault();\n        setCommentText(e.target.value);\n    }, [commentText]);\n\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: commentText\n        });\n    }, []);\n\n      return (\n          <>\n              <Card\n                  key={post}\n                  actions={[\n                    <div key=\"heart\"><HeartOutlined /></div>,\n                    <div key=\"comment\" onClick={onClickComment}><MessageOutlined /></div>,\n                    <div key=\"else\"><MenuOutlined /></div>,\n                  ]}\n                  cover={<img alt=\"example\" src={post.testImg}\n                              style={{ maxHeight: 500}}\n                  />}\n              >\n                <Button style={{ float: 'right' }}><UserAddOutlined /></Button>\n                <Card.Meta\n                    title={post.User.nickname}\n                    avatar={<Avatar size={30} icon={<UserOutlined/>}/>}\n                    description={post.content}\n                />\n                  <List\n                      itemLayout=\"horizontal\"\n                      dataSource={commentList}\n                      style={{ margin: '15px 5px 5px 20px' }}\n                      renderItem={item => (\n                          <List.Item>\n                              <List.Item.Meta\n                                  avatar={<Avatar icon={<UserOutlined/>} />}\n                                  title={<a href=\"https://ant.design\">{item.title}</a>}\n                                  description={item.content}\n                              />\n                          </List.Item>\n                      )}\n                  />\n              </Card>\n\n              {commentFormOpen && (\n                  <>\n                      <Input placeholder=\"input text\"\n                             onSearch={value => console.log(value)}\n                             enterButton=\"send\"\n                             value={commentText}\n                             onChange={onChangeComment}\n                      />\n                      <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} onClick={onSubmit}/>\n                  </>\n              )}\n              <br />\n          </>\n      );\n};\n\nMainPost.PropTypes = {\n    post: PropTypes.node,\n};\n\nexport default MainPost;","import React, { useCallback, useState, useEffect } from 'react';\nimport { Input, Button, Form } from 'antd';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {ADD_POST_REQUEST} from \"../reducers/post\";\n\nconst PostForm = () => {\n\n    const { imgPaths, addPost } = useSelector(state => state.post);\n    const [text, setText] = useState('');\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setText('');\n    },[addPost === true]);\n\n    const onPost = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                text\n            }\n        })\n    }, []);\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, []);\n\n    return (\n        <Form>\n            <Input.TextArea\n                placeholder=\"오늘의 이야기를 적어보세요\"\n                maxLength={140}\n                autoSize={{ minRows: 4, maxRows: 4 }}\n                value={text}\n                onChange={onChangeText}\n            />\n            <div style={{ padding: 10}}>\n                <Button >Image</Button>\n                <Button type=\"primary\" style={{ float : 'right'}} onClick={onPost}>Post</Button>\n            </div>\n            {imgPaths.map((v) => {\n                return (\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={'http://localhost:3065' + v} style={{ width: '200px' }}/>\n                        <div>\n                            <Button>Delete</Button>\n                        </div>\n                    </div>\n                )\n            })}\n        </Form>\n    );\n};\n\nexport default PostForm;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport MainPost from '../components/MainPost';\n\n\n// 타임라인 역할\nconst Home = () => {\n\n    const { isLoggedIn } = useSelector(state => state.user);\n    const { mainPosts } = useSelector(state => state.post);\n\n    return (\n        <>\n            <div style={{ padding: 10 }}>Hello, FRIEND!</div>\n            {isLoggedIn &&\n                <PostForm/>\n            }\n            {mainPosts.map( (post) => {\n                return (\n                    <MainPost key={post} post={post} />\n                );\n            })}\n        </>\n    );\n};\n\nexport default Home;\n","const testPost = {\n    User: {\n        id: 1,\n        nickname: 'seoyoung',\n    },\n    content: '오늘 날씨 좋네ㅠ',\n};\n\nconst testComment = {\n    title: 'dlwlrma',\n    content: '절미같아'\n};\n\nexport const initialState = {\n    mainPosts: [{\n        User: {\n            id: 1,\n            nickname: 'seoyoung',\n        },\n        content: '안녕? 강아지야',\n        testImg: 'https://t1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/brunch/service/user/QsT/image/NSTeOeMe0MddpqlJ23FZV7hJGvg'\n    }], // 화면에 보일 포스트들\n    imgPaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패\n    isAddingPost: false, // 포스트 업로드 중\n    addPost: false,\n    isAddingComment: false,\n    addCommentErrorReason: '',\n    commentText: '',\n    commentList: [\n        {\n            title: 'vvoojin',\n            content: '귀엽당!!'\n        },\n    ],\n};\n\n// 업로드\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\n// 포스트 제거\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\n// 포스트 수정\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\nexport const ADD_TEST = 'ADD_TEST';\n\n// 로딩\n\n// like버튼 누르기\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\n// like버튼 취소\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\n// 이미지 업로딩\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\n// 댓글 달기\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\n// 댓글 불러오기\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\n\n// 리트윗\n\n\nexport const addPostAction = {\n    type: ADD_POST_REQUEST,\n};\n\nexport const addTestAction = {\n    type: ADD_TEST,\n    data : {\n        content: 'Hello, This is main post!',\n        UserId: 1,\n        User : {\n            nickname: 'seoyoung',\n        },\n    },\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST: {\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                addPost: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: true,\n                mainPosts: [testPost, ...state.mainPosts],\n            }\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPost: false,\n                addPostErrorReason: action.error,\n            }\n        }\n        case ADD_COMMENT_REQUEST: {\n            return {\n                ...state,\n                addCommentErrorReason: '',\n                isAddingComment: true,\n                commentText: ''\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            return {\n                ...state,\n                isAddingComment: false,\n                commentList: [...state.commentList, testComment],\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            return {\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error\n            };\n        }\n        case ADD_TEST: {\n            return {\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n            };\n        }\n        default : {\n            return {\n                ...state,\n            };\n        }\n    }\n};\n\n\nexport default reducer;","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"antd\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAjBA;AACA;AAwzDA;AA2DA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACnKA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}